package club.westcs.autocar.markOne;

import info.gridworld.actor.Critter;
import info.gridworld.grid.Grid;
import info.gridworld.grid.Location;
		import info.gridworld.actor.*;
		import java.util.ArrayList;

		
		
		public class Car extends Actor
		{
		   
			
			
		    public void act()
		    {
		        if (getGrid() == null)
		            return;
		        
		        
		        ArrayList<Actor> actors = getActors();
		        processActors(actors);
		        
		        
		        ArrayList<Location> moveLocs = getMoveLocations();
		        Location loc = selectMoveLocation(moveLocs);
		        makeMove(loc);
		    }

		   
		    
		    public ArrayList<Actor> getActors()
		    {
		        return getGrid().getNeighbors(getLocation());
		    }

		   
		    public void processActors(ArrayList<Actor> actors)
		    {
		        for (Actor a : actors)
		        {
		            if (!(a instanceof Rock) && !(a instanceof Critter))
		                a.removeSelfFromGrid();
		        }
		    }

		   
		    public boolean canMove()
		    {
		        Grid<Actor> gr = getGrid();
		        if (gr == null)
		            return false;
		        Location loc = getLocation();
		        Location next = loc.getAdjacentLocation(getDirection());
		        if (!gr.isValid(next))
		            return false;
		        Actor neighbor = gr.get(next);
		        return (neighbor == null) || (neighbor instanceof Flower);
		}
		
		    public ArrayList<Location> getMoveLocations()
		    {
		        ArrayList<Location> locs =  new ArrayList<Location>();
		        if(canMove()) {
		        	locs.add(getLocation.getAdjacentLocation(getDirection()))
		        }
		        
		        
		        return locs;
		    }
		    
		    public void turn()
		    {
		        setDirection(getDirection() + Location.HALF_RIGHT);
		    }

		   
		    public void move()
		    {
		        Grid<Actor> gr = getGrid();
		        if (gr == null)
		            return;
		        Location loc = getLocation();
		        Location next = loc.getAdjacentLocation(getDirection());
		        if (gr.isValid(next))
		            moveTo(next);
		        else
		            removeSelfFromGrid();
		    }
		   
		    
		    public Location selectMoveLocation(ArrayList<Location> locs)
		    {
		        int n = locs.size();
		        if (n == 0)
		            return getLocation();
		        int r = (int) (Math.random() * n);
		        return locs.get(r);
		    }

		  
		    public void makeMove(Location loc)
		    {
		        if (loc == null)
		            removeSelfFromGrid();
		        else
		            moveTo(loc);
		    }
		}


